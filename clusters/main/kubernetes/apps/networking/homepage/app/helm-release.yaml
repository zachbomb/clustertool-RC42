---
# yaml-language-server: $schema=https://kubernetes-schemas.zinn.ca/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
    name: homepage
    namespace: networking
spec:
    interval: 15m
    chart:
        spec:
            chart: homepage
            version: 9.6.1
            sourceRef:
                kind: HelmRepository
                name: truecharts
                namespace: flux-system
    releaseName: homepage
    values:
        credentials:
            s3:
                type: s3
                url: "${S3URL}"
                bucket: "${S3PREFIX}-homepage"
                accessKey: "${S3ID}"
                secretKey: "${S3KEY}"
                encrKey: "${S3KEY}"
        TZ: America/Los_Angeles
        configmap:
            config:
                data:
                    bookmarks.yaml: |
                        ---
                        # For configuration options and examples, please see:
                        # https://gethomepage.dev/latest/configs/bookmarks

                        - Developer:
                            - Github:
                                - abbr: GH
                                  href: https://github.com/zachbomb/clustertool-RC42/

                        - Social:
                            - Reddit:
                                - abbr: RE
                                  href: https://reddit.com/

                        - Entertainment:
                            - YouTube:
                                - abbr: YT
                                  href: https://youtube.com/
                    custom.css: ""
                    custom.js: ""
                    kubernetes.yaml: |
                        mode: cluster
                    services.yaml: "---\n# For configuration options and examples, please see:\n# https://gethomepage.dev/latest/configs/services\n- -*rrs:\n  - Prowlarr:\n      icon: prowlarr\n      href: https://prowlarr.sf.wethecommon.com\n      description: Usenet Indexer Manager\n      widget:\n        type: prowlarr\n        url: http://192.168.10.10:9696\n        key: 8572025561b846be937dfe1d05196cff\n\n  Content Management:\n  - Roon:\n      icon: https://www.frankprowsehifi.com.au/wp-content/uploads/2019/11/ROON.png\n      href: https://roonsettings.sf.wethecommon.com\n      description: Music Storage/Player\n\n- Networking & Security:\n  - PiHole:\n      icon: https://chriskirby.net/content/images/2023/01/pihole-wide-header.png\n      href: http://192.168.10.3/admin\n      description: DNS and Ad Blocker\n      widget:\n        type: pihole\n        url: http://192.168.10.3\n        key: 3600d775970716c74a077dc040e704bea8189e555c9ed7c79005563588e95e63\n\n  - Unifi:\n      icon: unifi\n      href: https://192.168.10.1:443\n      description: Network Router/Switch/Client Management\n      widget:\n        type: unifi\n        url: https://192.168.10.1:443\n        username: homepage\n        password: CNuGGQLz6Pth\n\n  - Traefik:\n      icon: traefik\n      href: https://traefik-dashboard.sf.wethecommon.com/dashboard\n      description: Network Reverse Proxy\n      widget:\n        type: traefik\n        url: http://192.168.10.173:9000\n\n  - Crowdsec:\n      icon: https://github.com/crowdsecurity/crowdsec-docs/blob/main/crowdsec-docs/static/img/crowdsec_logo.png?raw=true\n      href: https://app.crowdsec.net/security-engines\n      description: Network Security Bouncer\n      widget:\n        type: crowdsec\n        url: http://172.16.0.145\n        username: 1\n        password: $2a$10$dfxR6yAMMNJkntV8ICnUhun6Bp1V.ltM5h/vBAG5A1p8yDMtHQM7i\n\n- Servers:\n  - ProxMox:\n      icon: proxmox\n      href: https://proxmox.sf.wethecommon.com\n      description: Virtualization Management\n      widget:\n        type: proxmox\n        url: https://192.168.10.30:8006\n        username: api@pam!homepage\n        password: e7c4e37b-1e10-4876-95c8-f4425493bb8c\n        node: pibbthecat\n\n- Data & Storage:\n  - TrueNas:\n      icon: truenas\n      href: https://truenas.sf.wethecommon.com\n      description: NAS and Virtualized Services\n      widget:\n        type: truenas\n        url: https://192.168.10.122:444\n        username: media\n        password: rnz9zrj*mxr8jza_FKY\n        enablePools: true\n        nasType: scale\n\n- Home Automation:\n  - HomeAssistant:\n      icon: https://lab.uberspace.de/_images/homeassistant.png\n      href: https://homeassistant.sf.wethecommon.com\n      description: HomeAssistant VM Dashboard\n      widget:\n        type: homeassistant\n        url: http://192.168.10.69:8123\n        key: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiI0ZWM0NTJjMTUwNDA0ZjQ4OTdkNDkyNGU5ODM1NjFlNiIsImlhdCI6MTcxNjQwODg2MCwiZXhwIjoyMDMxNzY4ODYwfQ.OSyDJcjmJGfzYx-ElGh_LQo8707iaNzf7_EjaD3xAL0\n\n  - HomeBridge:\n      icon: homebridge\n      href: https://homebridge.sf.wethecommon.com\n      description: HomeBridge VM Dashboard\n      widget:\n        type: homebridge\n        url: http://192.168.10.92:8581\n        username: zach\n        password: jxv7dmq0vrh!tmx_FBD"


                    settings.yaml: "---\n# For configuration options and examples, please see:\n# https://gethomepage.dev/latest/configs/settings\n\nproviders:\n  openweathermap: openweathermapapikey\n  weatherapi: weatherapiapikey"

                    widgets.yaml: "---\n# For configuration options and examples, please see:\n# https://gethomepage.dev/latest/configs/widgets\n\n- unifi_console:\n    url: https://192.168.10.1:443\n    username: homepage\n    password: CNuGGQLz6Pth\n\n- resources:\n    cpu: true\n    memory: true\n    disk: / \n\n- search:\n    provider: duckduckgo\ntarget: _blank\n\n- datetime:\n    text_size: xl\n    format:\n      dateStyle: short\n      timeStyle: short\n      hour12: true"
                enabled: false
        forceConfigFromValues: false
        ingress:
            main:
                enabled: true
                integrations:
                    traefik:
                        enabled: true
                        middlewares:
                            - name: local
                              namespace: traefik
                            - name: bouncer
                              namespace: traefik
                    certManager:
                        enabled: true
                        certificateIssuer: wethecommon-prod-cert
                hosts:
                    - host: homepage.${BASE_DOMAIN}
#                tls:
#                    - hosts:
#                        - homepage.${BASE_DOMAIN}
#                      secretName: homepage-tls
        persistence:
            config:
                enabled: true
                readOnly: false
                main:
                    mountPath: /config
                    volsync:
                        - name: config
                          type: restic
                          credentials: s3
                          dest:
                            enabled: true
                            cacheCapacity: 10Gi
                          src:
                            enabled: true
                            cacheCapacity: 10Gi
            bookmarks-config:
                enabled: '{{ not .Values.forceConfigFromValues }}'
                mountPath: /config/bookmarks.yaml
                objectName: config
                readOnly: true
                subPath: bookmarks.yaml
                targetSelector:
                    main: {}
                type: configmap
            custom-css-config:
                enabled: '{{ not .Values.forceConfigFromValues }}'
                mountPath: /config/custom.css
                objectName: config
                readOnly: true
                subPath: custom.css
                targetSelector:
                    main: {}
                type: configmap
            custom-js-config:
                enabled: '{{ not .Values.forceConfigFromValues }}'
                mountPath: /config/custom.js
                objectName: config
                readOnly: true
                subPath: custom.js
                targetSelector:
                    main: {}
                type: configmap
            force-bookmarks-config:
                enabled: '{{ .Values.forceConfigFromValues }}'
                mountPath: /app/config/bookmarks.yaml
                objectName: config
                readOnly: true
                subPath: bookmarks.yaml
                type: configmap
            force-custom-css-config:
                enabled: '{{ .Values.forceConfigFromValues }}'
                mountPath: /app/config/custom.css
                objectName: config
                readOnly: true
                subPath: custom.css
                type: configmap
            force-custom-js-config:
                enabled: '{{ .Values.forceConfigFromValues }}'
                mountPath: /app/config/custom.js
                objectName: config
                readOnly: true
                subPath: custom.js
                type: configmap
            force-services-config:
                enabled: '{{ .Values.forceConfigFromValues }}'
                mountPath: /app/config/services.yaml
                objectName: config
                readOnly: true
                subPath: services.yaml
                type: configmap
            force-settings-config:
                enabled: '{{ .Values.forceConfigFromValues }}'
                mountPath: /app/config/settings.yaml
                objectName: config
                readOnly: true
                subPath: settings.yaml
                type: configmap
            force-widgets-config:
                enabled: '{{ .Values.forceConfigFromValues }}'
                mountPath: /app/config/widgets.yaml
                objectName: config
                readOnly: true
                subPath: widgets.yaml
                type: configmap
            kubernetes-config:
                enabled: true
                mountPath: /app/config/kubernetes.yaml
                objectName: config
                readOnly: true
                subPath: kubernetes.yaml
                type: configmap
            services-config:
                enabled: '{{ not .Values.forceConfigFromValues }}'
                mountPath: /config/services.yaml
                objectName: config
                readOnly: true
                subPath: services.yaml
                targetSelector:
                    main: {}
                type: configmap
            settings-config:
                enabled: '{{ not .Values.forceConfigFromValues }}'
                mountPath: /config/settings.yaml
                objectName: config
                readOnly: true
                subPath: settings.yaml
                targetSelector:
                    main: {}
                type: configmap
            widgets-config:
                enabled: '{{ not .Values.forceConfigFromValues }}'
                mountPath: /config/widgets.yaml
                objectName: config
                readOnly: true
                subPath: widgets.yaml
                targetSelector:
                    main: {}
                type: configmap
        podOptions:
            dnsConfig:
                options:
                    - name: ndots
                      value: "3"
        rbac:
            main:
                clusterWide: true
                enabled: true
                primary: true
                rules:
                    - apiGroups:
                        - ""
                      resources:
                        - namespaces
                        - pods
                        - nodes
                      verbs:
                        - get
                        - list
                    - apiGroups:
                        - extensions
                        - networking.k8s.io
                      resources:
                        - ingresses
                      verbs:
                        - get
                        - list
                    - apiGroups:
                        - traefik.containo.us
                        - traefik.io
                      resources:
                        - ingressroutes
                      verbs:
                        - get
                        - list
                    - apiGroups:
                        - metrics.k8s.io
                      resources:
                        - nodes
                        - pods
                      verbs:
                        - get
                        - list
                    - apiGroups:
                        - apiextensions.k8s.io
                      resources:
                        - customresourcedefinitions/status
                      verbs:
                        - get
        release_name: homepage
        resources: {}
        securityContext:
            container:
                UMASK: "0022"
                runAsGroup: 1000
                runAsUser: 1000
            pod:
                fsGroup: 1000
                fsGroupChangePolicy: OnRootMismatch
        service:
            main:
                enabled: true
                type: LoadBalancer
                loadBalancerIP: ${HOMEPAGE_IP}
                ports:
                    main:
                        port: 10352
                        protocol: http
                        targetPort: 3000
        serviceAccount:
            main:
                enabled: true
                primary: true
        addons:
            codeserver:
                enabled: true
                service:
                    type: LoadBalancer
                    loadBalancerIP: ${HOMEPAGE_IP}
                    ports:
                        codeserver:
                            port: 12321
                ingress:
                    enabled: true
                    hosts:
                        - host: homepage-code.${BASE_DOMAIN}
                          paths:
                          - path: /
                            pathType: Prefix
                    integrations:
                        certManager:
                            certificateIssuer: wethecommon-prod-cert
                            enabled: true
                        traefik:
                            enabled: true
                            middlewares:
                                - name: local
                                  namespace: traefik
                                - name: bouncer
                                  namespace: traefik

