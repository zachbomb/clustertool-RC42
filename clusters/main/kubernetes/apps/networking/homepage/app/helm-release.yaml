---
# yaml-language-server: $schema=https://kubernetes-schemas.zinn.ca/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
    name: homepage
    namespace: networking
spec:
    interval: 15m
    chart:
        spec:
            chart: homepage
            version: 9.6.1
            sourceRef:
                kind: HelmRepository
                name: truecharts
                namespace: flux-system
    releaseName: homepage
    values:
        credentials:
            s3:
                type: s3
                url: "${S3URL}"
                bucket: "${S3PREFIX}-homepage"
                accessKey: "${S3ID}"
                secretKey: "${S3KEY}"
                encrKey: "${S3KEY}"
        TZ: America/Los_Angeles
        ingress:
            main:
                enabled: true
                integrations:
                    traefik:
                        enabled: true
                        middlewares:
                            - name: local
                              namespace: traefik
                            - name: bouncer
                              namespace: traefik
                    certManager:
                        enabled: true
                        certificateIssuer: wethecommon-prod-cert
                hosts:
                    - host: homepage.${BASE_DOMAIN}
#                tls:
#                    - hosts:
#                        - homepage.${BASE_DOMAIN}
#                      secretName: homepage-tls
        persistence:
            config:
                enabled: true
                readOnly: false
                main:
                    mountPath: /config
                    volsync:
                        - name: config
                          type: restic
                          credentials: s3
                          dest:
                            enabled: true
                            cacheCapacity: 10Gi
                          src:
                            enabled: true
                            cacheCapacity: 10Gi
            bookmarks-config:
                enabled: '{{ not .Values.forceConfigFromValues }}'
                mountPath: /config/bookmarks.yaml
                objectName: config
                readOnly: true
                subPath: bookmarks.yaml
                targetSelector:
                    main: {}
                type: configmap
            custom-css-config:
                enabled: '{{ not .Values.forceConfigFromValues }}'
                mountPath: /config/custom.css
                objectName: config
                readOnly: true
                subPath: custom.css
                targetSelector:
                    main: {}
                type: configmap
            custom-js-config:
                enabled: '{{ not .Values.forceConfigFromValues }}'
                mountPath: /config/custom.js
                objectName: config
                readOnly: true
                subPath: custom.js
                targetSelector:
                    main: {}
                type: configmap
            force-bookmarks-config:
                enabled: '{{ .Values.forceConfigFromValues }}'
                mountPath: /app/config/bookmarks.yaml
                objectName: config
                readOnly: true
                subPath: bookmarks.yaml
                type: configmap
            force-custom-css-config:
                enabled: '{{ .Values.forceConfigFromValues }}'
                mountPath: /app/config/custom.css
                objectName: config
                readOnly: true
                subPath: custom.css
                type: configmap
            force-custom-js-config:
                enabled: '{{ .Values.forceConfigFromValues }}'
                mountPath: /app/config/custom.js
                objectName: config
                readOnly: true
                subPath: custom.js
                type: configmap
            force-services-config:
                enabled: '{{ .Values.forceConfigFromValues }}'
                mountPath: /app/config/services.yaml
                objectName: config
                readOnly: true
                subPath: services.yaml
                type: configmap
            force-settings-config:
                enabled: '{{ .Values.forceConfigFromValues }}'
                mountPath: /app/config/settings.yaml
                objectName: config
                readOnly: true
                subPath: settings.yaml
                type: configmap
            force-widgets-config:
                enabled: '{{ .Values.forceConfigFromValues }}'
                mountPath: /app/config/widgets.yaml
                objectName: config
                readOnly: true
                subPath: widgets.yaml
                type: configmap
            kubernetes-config:
                enabled: true
                mountPath: /app/config/kubernetes.yaml
                objectName: config
                readOnly: true
                subPath: kubernetes.yaml
                type: configmap
            services-config:
                enabled: '{{ not .Values.forceConfigFromValues }}'
                mountPath: /config/services.yaml
                objectName: config
                readOnly: true
                subPath: services.yaml
                targetSelector:
                    main: {}
                type: configmap
            settings-config:
                enabled: '{{ not .Values.forceConfigFromValues }}'
                mountPath: /config/settings.yaml
                objectName: config
                readOnly: true
                subPath: settings.yaml
                targetSelector:
                    main: {}
                type: configmap
            widgets-config:
                enabled: '{{ not .Values.forceConfigFromValues }}'
                mountPath: /config/widgets.yaml
                objectName: config
                readOnly: true
                subPath: widgets.yaml
                targetSelector:
                    main: {}
                type: configmap
        podOptions:
            dnsConfig:
                options:
                    - name: ndots
                      value: "3"
        rbac:
            main:
                clusterWide: true
                enabled: true
                primary: true
                rules:
                    - apiGroups:
                        - ""
                      resources:
                        - namespaces
                        - pods
                        - nodes
                      verbs:
                        - get
                        - list
                    - apiGroups:
                        - extensions
                        - networking.k8s.io
                      resources:
                        - ingresses
                      verbs:
                        - get
                        - list
                    - apiGroups:
                        - traefik.containo.us
                        - traefik.io
                      resources:
                        - ingressroutes
                      verbs:
                        - get
                        - list
                    - apiGroups:
                        - metrics.k8s.io
                      resources:
                        - nodes
                        - pods
                      verbs:
                        - get
                        - list
                    - apiGroups:
                        - apiextensions.k8s.io
                      resources:
                        - customresourcedefinitions/status
                      verbs:
                        - get
        release_name: homepage
        resources: {}
        securityContext:
            container:
                UMASK: "0022"
                runAsGroup: 1000
                runAsUser: 1000
            pod:
                fsGroup: 1000
                fsGroupChangePolicy: OnRootMismatch
        service:
            main:
                enabled: true
                type: LoadBalancer
                loadBalancerIP: ${HOMEPAGE_IP}
                ports:
                    main:
                        port: 10352
                        protocol: http
                        targetPort: 3000
        serviceAccount:
            main:
                enabled: true
                primary: true
        addons:
            codeserver:
                enabled: true
                service:
                    type: LoadBalancer
                    loadBalancerIP: ${HOMEPAGE_IP}
                    ports:
                        codeserver:
                            port: 12321
                ingress:
                    enabled: true
                    hosts:
                        - host: homepage-code.${BASE_DOMAIN}
                          paths:
                          - path: /
                            pathType: Prefix
                    integrations:
                        certManager:
                            certificateIssuer: wethecommon-prod-cert
                            enabled: true
                        traefik:
                            enabled: true
                            middlewares:
                                - name: local
                                  namespace: traefik
                                - name: bouncer
                                  namespace: traefik

