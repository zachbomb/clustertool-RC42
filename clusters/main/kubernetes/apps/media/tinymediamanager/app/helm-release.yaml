---
# yaml-language-server: $schema=https://kubernetes-schemas.zinn.ca/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
    name: tinymediamanager
    namespace: media
spec:
    interval: 15m
    chart:
        spec:
            chart: tinymediamanager
            version: 12.6.0
            sourceRef:
                kind: HelmRepository
                name: truecharts
                namespace: flux-system
    releaseName: tinymediamanager
    values:
        credentials:
            s3:
                type: s3
                url: "${S3URL}"
                bucket: "${S3PREFIX}-tinymediamanager"
                accessKey: "${S3ID}"
                secretKey: "${S3KEY}"
                encrKey: "${S3KEY}"
        TZ: America/Los_Angeles
        ingress:
            main:
                enabled: true
                integrations:
                    traefik:
                        enabled: true
                        middlewares:
                         - name: local
                           namespace: traefik
                    certManager:
                        certificateIssuer: wethecommon-prod-cert
                        enabled: true
                    homepage:
                        description: Metadata Management
                        enabled: true
                        group: Content Management
                        icon: ""
                        name: TinyMediaManager
                        widget:
                            custom:
                                key: ""
                            enabled: false
                hosts:
                    - host: "tinymediamanager.${BASE_DOMAIN}"
                      paths:
                        - path: /
                          pathType: Prefix

        persistence:
            data:
                enabled: true
                readOnly: false
                main:
                    mountPath: /data
                    volsync:
                     - name: config
                       type: restic
                       credentials: s3
                       dest:
                         enabled: true
                         cacheCapacity: 100Gi
                       src:
                         enabled: true
                         cacheCapacity: 100Gi
            media:
                enabled: true
                type: nfs
                path: /mnt/Pibbs-Horde/media/data
                server: 192.168.10.123
                mountPath: /media
                mountOptions:
                 - nfsvers=4
                 - tcp
                 - intr
                 - hard
                 - noatime
                 - nodiratime
                 - nolock
            movies:
                enabled: true
                type: nfs
                path: /mnt/Pibbs-Horde/media/data/media/movies
                server: 192.168.10.123
                mountPath: /movies
                mountOptions:
                 - nfsvers=4
                 - tcp
                 - intr
                 - hard
                 - noatime
                 - nodiratime
                 - nolock
            tv:
                enabled: true
                type: nfs
                path: /mnt/Pibbs-Horde/media/data/media/tv
                server: 192.168.10.123
                mountPath: /tv
                mountOptions:
                 - nfsvers=4
                 - tcp
                 - intr
                 - hard
                 - noatime
                 - nodiratime
                 - nolock

        release_name: tinymediamanager
        resources: {}
        securityContext:
            container:
                PUID: 1000
                UMASK: "0022"
                readOnlyRootFilesystem: false
                runAsGroup: 0
                runAsNonRoot: false
                runAsUser: 0
            pod:
                fsGroup: 1000
                fsGroupChangePolicy: OnRootMismatch
        service:
            main:
                enabled: true
                loadBalancerIP: ""
                ports:
                    main:
                        port: 10179
                        targetPort: 4000
                type: LoadBalancer
        workload:
            main:
                podSpec:
                    containers:
                        main:
                            env:
                                PASSWORD: ""
                replicas: 1
                type: Deployment
